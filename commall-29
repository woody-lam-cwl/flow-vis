C23456789012345678901234567890123456789012345678901234567890123456789012
C
C     NBLK   is the maximum number of blocks.
C     NIM    is the maximum number of "I" grid points in any block.
C     NJM    is the maximum number of "J" grid points in any block.
C     NKM    is the maximum number of "K" grid points in any block.
C     MAXDIM is the maximum of NIM, NJM, NKM.
C     NPCH   is the maximum number of patches on any block.
C

      PARAMETER (NBLK=2,NIM=275,NJM=75,NKM=38,MAXDIM=275,NPCH=5)

C
C     NSECTIN  is the maximum number of blade geometry input sections that can be
C              used in "MULTIP" type input format.
C     NMATRIX  is the maximum of (1) The number of grid points on any interpolated
C              face when PATCH_TYPE = "N", or (2) The number of grid points on any
C              patch edge if using "GET_PATCH", OR  (3) the maximum number of grid 
C              input points used when "intype" = 0.
C     NIBLADE  is the maximum number of points on the blade surface at which 
C              the blade geometry can be input in "MULTIP" type format.
C
      PARAMETER (NSECTIN=41,NMATRIX=500,NIBLADE=150)
C
C     NPFACE    is the maximum number of grid points on any face which is to be
C               matched by interpolation, i.e. when PATCH_TYPE = "N".
C     N_INTFACE is the maximum number of faces which can be matched by
C               interpolation. i.e. for which PATCH_TYPE = "N".
C     NINT_PTS  is the maximum number of points that can be used for three dimensional
C               interpolation on a face with PATCH_TYPE = "N"
    
      PARAMETER (NPFACE=2500,N_INTFACE=6,NINT_PTS=10)
C     
C
      COMMON/BKINTERP/
     & NBLKINT(N_INTFACE),NPCHINT(N_INTFACE),DISTSQRD(NPFACE),
     & INEXT(NPFACE),JNEXT(NPFACE),KNEXT(NPFACE),
     & NORDER(NPFACE),NEXTI(N_INTFACE,NPFACE,NINT_PTS),
     & NEXTJ(N_INTFACE,NPFACE,NINT_PTS),NINTFACE,
     & NEXTK(N_INTFACE,NPFACE,NINT_PTS),NPINTERP(NPCH,NBLK),
     & INT_TYPE(NPCH,NBLK)
C
      COMMON/BKSIZE/
     & NBLOCKS,NI(NBLK),NJ(NBLK),NK(NBLK),NPOINT_TOT 
C
      COMMON/BKODDS/
     & PI,SFAC,DAMP,FACSEC,WROTBLK(NBLK),IFRESTART,IFCHECK,IFSTOP,
     & WROTI1(NBLK),WROTIM(NBLK),WROTJ1(NBLK),WROTJM(NBLK),
     & WROTK1(NBLK),WROTKM(NBLK),SFACIN,DAMPIN,FACSECIN
C
      COMMON/BKGAS/
     & RGAS,GA,CP,CV,FGA,RFGA,GA1,GAMR,TSTAG_REF(NBLK),PSTAG_REF(NBLK),
     & ROSTAT_REF(NBLK)
C
      COMMON/BKPRIM/
     & ROALL(NIM,NJM,NKM,NBLK),ROEALL(NIM,NJM,NKM,NBLK),
     & ROVXALL(NIM,NJM,NKM,NBLK),ROVRALL(NIM,NJM,NKM,NBLK),
     & RORVTALL(NIM,NJM,NKM,NBLK)
C
      COMMON/BLKDELS/
     & DELROALL(NIM,NJM,NKM,NBLK),DELROEALL(NIM,NJM,NKM,NBLK),
     & DELROVXALL(NIM,NJM,NKM,NBLK),DELROVRALL(NIM,NJM,NKM,NBLK),
     & DELRORVTALL(NIM,NJM,NKM,NBLK)
C
      COMMON/BKFLUX/
     & FIMAS(NIM,NJM,NKM),FJMAS(NIM,NJM,NKM),FKMAS(NIM,NJM,NKM),
     & FLUXI(NIM,NJM,NKM),FLUXJ(NIM,NJM,NKM),FLUXK(NIM,NJM,NKM),
     & SOURCE(NIM,NJM,NKM),MWALLI1(NJM,NKM,NBLK),MWALLIM(NJM,NKM,NBLK),
     & MWALLJ1(NIM,NKM,NBLK),MWALLJM(NIM,NKM,NBLK),MWALLK1(NIM,NJM,NBLK)
     & ,MWALLKM(NIM,NJM,NBLK)
C
      COMMON/BKGRIDIN/
     & INTYPE(NBLK),NPINPUT(NBLK),EXPO(NBLK),
     & IGIN(NMATRIX,NBLK),JGIN(NMATRIX,NBLK),KGIN(NMATRIX,NBLK),
     & XGIN(NMATRIX,NBLK),RGIN(NMATRIX,NBLK),RTGIN(NMATRIX,NBLK),
     & SCALE(NBLK),XMOVE(NBLK),RMOVE(NBLK),RTMOVE(NBLK),
     & NSMOOTH(NBLK),NSMOOTHMAX,NMATCH_LOOP(NBLK),
     & IFISMTH(NBLK),IFJSMTH(NBLK),IFKSMTH(NBLK)
C
      REAL IGIN,JGIN,KGIN
C
      COMMON/BKCORNERS/
     & XI1J1K1(NBLK),RI1J1K1(NBLK),RTI1J1K1(NBLK),XI1JMK1(NBLK),
     & RI1JMK1(NBLK),RTI1JMK1(NBLK),
     & XI1JMKM(NBLK),RI1JMKM(NBLK),RTI1JMKM(NBLK),XI1J1KM(NBLK),
     & RI1J1KM(NBLK),RTI1J1KM(NBLK),
     & XIMJ1K1(NBLK),RIMJ1K1(NBLK),RTIMJ1K1(NBLK),XIMJMK1(NBLK),
     & RIMJMK1(NBLK),RTIMJMK1(NBLK),
     & XIMJMKM(NBLK),RIMJMKM(NBLK),RTIMJMKM(NBLK),XIMJ1KM(NBLK),
     & RIMJ1KM(NBLK),RTIMJ1KM(NBLK)
C
      COMMON/BKSECTIONS/
     &  XINB(NSECTIN,NIBLADE,NBLK),
     &  RTINB(NSECTIN,NIBLADE,NBLK),DRTINB(NSECTIN,NIBLADE,NBLK),
     &  RINB(NSECTIN,NIBLADE,NBLK),FI(NIM,NBLK),FJ(NJM,NBLK),
     &  FK(NKM,NBLK),ILE(NBLK),ITE(NBLK),IF_IINT(NBLK),IM_IN(NBLK),
     &  NBLADES(NBLK),NOSECT(NBLK),NTIPGAP,NOBLADES(NPCH,NBLK)
C
      COMMON/BKCOORDS/
     & X(NIM,NJM,NKM,NBLK),R(NIM,NJM,NKM,NBLK),RT(NIM,NJM,NKM,NBLK),
     & RBLK(NIM,NJM,NKM),
     & XPIN(NMATRIX),RPIN(NMATRIX),RTPIN(NMATRIX),
     & IPIN(NMATRIX),JPIN(NMATRIX),KPIN(NMATRIX),
     & RIPIN(NMATRIX),RJPIN(NMATRIX),RKPIN(NMATRIX)
C
      COMMON/BKBCONDS/
     & POIN(NPCH,NJM,NBLK),TOIN(NPCH,NJM,NBLK),COSBXMER(NPCH,NJM,NBLK),
     & SINBXMER(NPCH,NJM,NBLK),COSBTMER(NPCH,NJM,NBLK),
     & SINBTMER(NPCH,NJM,NBLK),VTINLET(NPCH,NJM,NBLK),
     & POUT(NPCH,NJM,NBLK),RFINLET(NPCH,NBLK),
     & IFRELIN(NPCH,NBLK),I_EXBCS(NPCH,NBLK),I_POUT(NPCH,NBLK),
     & FREFLECT(NPCH,NBLK),POFIXED(NPCH,NBLK),TOFIXED(NPCH,NBLK),
     & VXFIXED(NPCH,NBLK),VRFIXED(NPCH,NBLK),VTFIXED(NPCH,NBLK)
C
      COMMON/BKPATCH/
     & FRACSHIFT(NPCH,NBLK),IPATCHS(NPCH,NBLK),IPATCHE(NPCH,NBLK),
     & JPATCHS(NPCH,NBLK),JPATCHE(NPCH,NBLK),KPATCHS(NPCH,NBLK),
     & KPATCHE(NPCH,NBLK),NEXT_BLOCK(NPCH,NBLK),NEXT_PATCH(NPCH,NBLK),
     & MATCH_TYPE(NPCH,NBLK),NMATCH_ON(NPCH,NBLK),
     & NMATCH_OFF(NPCH,NBLK),IFPSMOOTH(NPCH,NBLK),IFDONE(NPCH,NBLK),
     & NPATCH(NBLK),NEXT_I(NPCH,NBLK),NEXT_J(NPCH,NBLK),
     & NEXT_K(NPCH,NBLK),PATCHTYPE(NPCH,NBLK)
C
      COMMON/PATGRID/
     & NPATCHIN(NPCH,NBLK),EXPATIN(NPCH,NBLK),
     & IPATIN(NPCH,NMATRIX,NBLK),JPATIN(NPCH,NMATRIX,NBLK),
     & KPATIN(NPCH,NMATRIX,NBLK),XPATIN(NPCH,NMATRIX,NBLK),
     & RPATIN(NPCH,NMATRIX,NBLK),RTPATIN(NPCH,NMATRIX,NBLK)
C
      COMMON/BKAREAS/
     &AIX(NIM,NJM,NKM,NBLK),AIT(NIM,NJM,NKM,NBLK),AIR(NIM,NJM,NKM,NBLK),
     &AJX(NIM,NJM,NKM,NBLK),AJT(NIM,NJM,NKM,NBLK),AJR(NIM,NJM,NKM,NBLK),
     &AKX(NIM,NJM,NKM,NBLK),AKT(NIM,NJM,NKM,NBLK),AKR(NIM,NJM,NKM,NBLK),
     & VOL(NIM,NJM,NKM,NBLK),VOLOR(NIM,NJM,NKM,NBLK),
     & WRAIT(NIM,NJM,NKM,NBLK),WRAJT(NIM,NJM,NKM,NBLK),
     & WRAKT(NIM,NJM,NKM,NBLK)
C
      COMMON/BKSTEP/
     & NSTEPS,NSTEP,NCHANGE,NSTEPUP,CFL,STEP(NIM,NJM,NKM,NBLK),
     & FMGRID(NBLK),SUPERSTEP(NBLK),FSTEPIN,FMIX,FMIX1,FEXTRAP,SUPERFAC
C
      COMMON/BLKSTORE/
     & STORE(NIM,NJM,NKM),STORE1(NIM,NJM,NKM),STORE2(NIM,NJM,NKM),
     & STORE3(NIM,NJM,NKM),STORE4(NIM,NJM,NKM),AVGPI(NIM,NJM,NKM),
     & AVGPJ(NIM,NJM,NKM),AVGPK(NIM,NJM,NKM),SPAREVAR(NIM,NJM,NKM,NBLK)
C
      COMMON/BKTIT/ TITLE
C
      COMMON/BKVIS/ 
     &  XLENGTH(NIM,NJM,NKM,NBLK),XFORCE(NIM,NJM,NKM,NBLK),
     &  TFORCE(NIM,NJM,NKM,NBLK),RFORCE(NIM,NJM,NKM,NBLK),
     &  ENSOURCE(NIM,NJM,NKM,NBLK),
     &  XLLIMM(NBLK),DIFMIN(NBLK),
     &  ILOS,NLOS,NSETVIS,REYNO,VISLAM,XLLIM,YPLUSW,CFWALL,RFVIS,
     &  PRANDTL,ISETVISS,ISETVISE,JSETVISS,JSETVISE,KSETVISS,
     &  KSETVISE,SSETVIS,NSETPOINTS
C
C     IF PERFORMING A STEADY CALCULATION MINIMISE THE MEMORY REQUIREMENTS BY USIMG
C     THE FOLLOWING PARAMETER STATEMENT -
C
      PARAMETER (NBLKDT=1, IMDT = 1, JMDT=1 ,KMDT=1)
C
C     IF PERFORMING AN UNSTEADY CALCULATION THE DIMENSIONS OF THE UNSTEADY
C     VARIABLES MUST BE THE SAME AS THOSE OF THE STEADY VARIABLES. CHANGE THE 
C     FOLLOWING PARAMETER STATEMENT SO THAT:
C             NBLKDT = NBLK , IMDT = NIM , JMDT = NJM ,  KMDT = NKM .
C
C      PARAMETER (NBLKDT=NBLK, IMDT=NIM, JMDT=NJM ,KMDT=NKM)
C
C
      COMMON/BKDTS/
     & ROGRPALL(IMDT,JMDT,KMDT,NBLKDT),ROEGRPALL(IMDT,JMDT,KMDT,NBLKDT),
     & ROVXGRPALL(IMDT,JMDT,KMDT,NBLKDT),
     & ROVRGRPALL(IMDT,JMDT,KMDT,NBLKDT),
     & RORVTGRPALL(IMDT,JMDT,KMDT,NBLKDT),
     & RONM1ALL(IMDT,JMDT,KMDT,NBLKDT), 
     & ROENM1ALL(IMDT,JMDT,KMDT,NBLKDT),
     & ROVXNM1ALL(IMDT,JMDT,KMDT,NBLKDT),
     & ROVRNM1ALL(IMDT,JMDT,KMDT,NBLKDT),
     & RORVTNM1ALL(IMDT,JMDT,KMDT,NBLKDT),
     & IF_DTS, TRU_STEP, CLIMDT, NBTSTEP, NBTSTEPS, TIMTOT,
     & DAVGALL, DTMIN, DTS_CONV,FACSAFE
C
C
C
C     NSLIDFACE  is the total number of patches which form part of a sliding interface.
C     NSLIDINT   is the number of points used for interpolation across the sliding
C                interface - i.e. over several blocks and patches.
C     NSLIDNEXT      is the number of patches which may interface with a sliding patch.
C
      PARAMETER (NSLIDFACE=10, NSLIDINT=200, NSLIDNEXT = 5)
C
      COMMON/BKSLIDE/ 
     & NBLKSLIDE(NSLIDFACE),NPCHSLIDE(NSLIDFACE),FRAC_ANN(NSLIDFACE),
     & N_NEXTFACE(NSLIDFACE),NXBLK_SLIDE(NSLIDFACE,NSLIDNEXT),
     & NXPTCH_SLIDE(NSLIDFACE,NSLIDNEXT),NSLIDEFACE
C
      COMMON/BKWING/
     & PLIFT,PDRAG,VLIFT,VDRAG,AWING,P_DYNAMIC_IN
C
C     CONV_HISTORY is the number of historic sets of 25-time steps which is considered
C                  for automatic convergence check.
c     ERROR        is the acceptable error across the entire historic set     
      PARAMETER (CONV_HISTORY=20, ERROR=0.05)
      REAL :: LAST_CLIFT(10), LAST_CDRAG(10)
      COMMON/CONV/
     & LAST_CLIFT,LAST_CDRAG
C     
      DOUBLE PRECISION  XPIN,RPIN,RTPIN
C
      CHARACTER*1  PATCHTYPE
      CHARACTER*2  NEXTFACE
      CHARACTER*72 TITLE, OUTPUT_PATH
      CHARACTER*2  NEXT_I, NEXT_J, NEXT_K
C
